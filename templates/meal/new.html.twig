{% extends 'base.html.twig' %} {% block title %}Ajouter repas{% endblock %} {%
block body %}
<div class="container">
	<h1>Créer un nouveau repas</h1>

	{{ form_start(form) }}

	<div class="form-section">
		<label class="label">Ajouter titre du repas</label>
		{{ form_widget(form.name) }}
	</div>

	<div class="form-section">
		<label class="label">Ajouter la liste des ingrédients</label>
		<div id="ingredient-form">
			{{ form_widget(form.ingredient_id) }}
			{{ form_widget(form.ingredient_name) }}
			<input type="hidden" id="meal_ingredient_name_hidden" />
			{{ form_widget(form.ingredient_quantity) }}
			{{ form_widget(form.ingredient_measure) }}
			<button
				type="button"
				id="add-ingredient-button"
				class="btn btn-primary mt-2"
			>
				Ajouter ingrédient
			</button>
		</div>
		<ul id="ingredient-list" class="list-group mt-3"></ul>
	</div>

	<div class="form-section">
		<label class="label">Ajouter un nouvel ingrédient manuellement</label>
		<button
			type="button"
			id="toggle-custom-ingredient-form-button"
			class="btn btn-secondary mt-2"
		>
			Ajouter un nouvel ingrédient
		</button>
		<div id="custom-ingredient-form" style="display: none" class="mt-3">
			<label for="custom-ingredient-name">Nom</label>
			<input
				type="text"
				id="custom-ingredient-name"
				class="form-control mb-2"
			/>
			<label for="custom-ingredient-kcal">Kcal</label>
			<input
				type="number"
				id="custom-ingredient-kcal"
				class="form-control mb-2"
			/>
			<label for="custom-ingredient-protein">Protéine</label>
			<input
				type="number"
				id="custom-ingredient-protein"
				class="form-control mb-2"
			/>
			<label for="custom-ingredient-fat">Lipides</label>
			<input
				type="number"
				id="custom-ingredient-fat"
				class="form-control mb-2"
			/>
			<label for="custom-ingredient-carbohydrate">Glucides</label>
			<input
				type="number"
				id="custom-ingredient-carbohydrate"
				class="form-control mb-2"
			/>
			<button
				type="button"
				id="add-custom-ingredient-button"
				class="btn btn-primary mt-2"
			>
				Enregistrer l'ingrédient
			</button>
		</div>
	</div>

	<div class="form-section">
		<label class="label">Nbr de personne</label>
		{{ form_widget(form.NbPersonne) }}
	</div>

	<div class="form-section">
		<label class="label">Temps de préparation</label>
		{{ form_widget(form.time) }}
	</div>

	<div class="form-section">
		<label class="label">Repas de la journée</label>
		{{ form_widget(form.daily) }}
	</div>

	<div class="form-section">
		<label class="label">Tags du repas</label>
		{{ form_widget(form.categories) }}
	</div>

	<div class="form-section">
		<label class="label">Préparation</label>
		{{ form_widget(form.description) }}
	</div>

	<div class="form-section">
		<label class="label">Ajouter une image</label>
		{{ form_widget(form.imageFile) }}
	</div>

	<button class="button">Enregistrer</button>

	{{ form_end(form) }}

	<a href="{{ path('user_dashboard') }}" class="button button-secondary mt-3"
		>Retour au tableau de bord</a
	>
</div>
{% endblock %} {% block javascripts %}
{{ parent() }}
<script>
	document.addEventListener("DOMContentLoaded", function () {
		const ingredientList = document.getElementById("ingredient-list");
		const addIngredientButton = document.getElementById(
			"add-ingredient-button"
		);
		const ingredientsDataField = document.getElementById(
			"meal_ingredients_data"
		);
		const customIngredientForm = document.getElementById(
			"custom-ingredient-form"
		);
		const toggleCustomIngredientFormButton = document.getElementById(
			"toggle-custom-ingredient-form-button"
		);
		const addCustomIngredientButton = document.getElementById(
			"add-custom-ingredient-button"
		);

		let ingredients = [];

		function updateIngredientList() {
			console.log("Updating ingredient list", ingredients);
			ingredientList.innerHTML = "";
			ingredients.forEach((ingredient, index) => {
				const li = document.createElement("li");
				li.classList.add(
					"list-group-item",
					"d-flex",
					"justify-content-between",
					"align-items-center"
				);
				li.textContent = `${ingredient.name} - ${ingredient.quantity} ${ingredient.measure}`;

				// Create delete button
				const deleteButton = document.createElement("button");
				deleteButton.classList.add("btn", "btn-danger", "btn-sm");
				deleteButton.innerHTML = '<i class="fas fa-trash-alt"></i>';
				deleteButton.addEventListener("click", function () {
					removeIngredient(index);
				});

				li.appendChild(deleteButton);
				ingredientList.appendChild(li);
			});
		}

		function removeIngredient(index) {
			ingredients.splice(index, 1);
			updateIngredientList();
		}

		addIngredientButton.addEventListener("click", function () {
			const id = document.getElementById("meal_ingredient_id").value;
			const name = document.getElementById("meal_ingredient_name_hidden").value;
			const quantity = document.getElementById(
				"meal_ingredient_quantity"
			).value;
			const measure = document.getElementById("meal_ingredient_measure").value;

			console.log("Adding ingredient:", { id, name, quantity, measure });

			if (id && name && quantity && measure) {
				ingredients.push({ id, name, quantity, measure });
				console.log("Ingredient added:", { id, name, quantity, measure });
				updateIngredientList();
				// Reset the form fields
				document.getElementById("meal_ingredient_id").value = "";
				document.getElementById("meal_ingredient_quantity").value = "";
				document.getElementById("meal_ingredient_measure").value = "";
				// Remove the selected option from Select2
				$("#meal_ingredient_name").val(null).trigger("change");
				document.getElementById("meal_ingredient_name_hidden").value = "";
				// Ensure Select2 placeholder is reset
				$("#meal_ingredient_name").empty();
			} else {
				console.log("Missing data:", { id, name, quantity, measure });
			}
		});

		toggleCustomIngredientFormButton.addEventListener("click", function () {
			customIngredientForm.style.display =
				customIngredientForm.style.display === "none" ? "block" : "none";
		});

		addCustomIngredientButton.addEventListener("click", function () {
			const name = document.getElementById("custom-ingredient-name").value;
			const kcal = document.getElementById("custom-ingredient-kcal").value;
			const protein = document.getElementById(
				"custom-ingredient-protein"
			).value;
			const fat = document.getElementById("custom-ingredient-fat").value;
			const carbohydrate = document.getElementById(
				"custom-ingredient-carbohydrate"
			).value;

			console.log("Adding custom ingredient:", {
				name,
				kcal,
				protein,
				fat,
				carbohydrate,
			});

			fetch("{{ path('ingredient_add') }}", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
					"X-Requested-With": "XMLHttpRequest",
				},
				body: JSON.stringify({
					name: name,
					kcal: kcal,
					protein: protein,
					fat: fat,
					carbohydrate: carbohydrate,
				}),
			})
				.then((response) => response.json())
				.then((data) => {
					console.log("Response from server:", data);
					if (data.success) {
						// Reset the custom ingredient form
						document.getElementById("custom-ingredient-name").value = "";
						document.getElementById("custom-ingredient-kcal").value = "";
						document.getElementById("custom-ingredient-protein").value = "";
						document.getElementById("custom-ingredient-fat").value = "";
						document.getElementById("custom-ingredient-carbohydrate").value =
							"";
						customIngredientForm.style.display = "none";
					} else {
						alert("Erreur lors de l'ajout de l'ingrédient.");
					}
				})
				.catch((error) => {
					console.error("Error:", error);
					alert("Erreur lors de l'ajout de l'ingrédient.");
				});
		});

		// Transfer ingredients data to the hidden field before form submission
		document.querySelector("form").addEventListener("submit", function (event) {
			ingredientsDataField.value = JSON.stringify(ingredients);
			console.log(
				"Submitting form with ingredients data:",
				ingredientsDataField.value
			);

			// Check if there are ingredients added, if yes, allow submission even if Select2 is empty
			if (ingredients.length === 0) {
				event.preventDefault();
				alert(
					"Veuillez ajouter au moins un ingrédient avant de soumettre le formulaire."
				);
			}
		});

		// Initialize Select2 for ingredient_name
		$("#meal_ingredient_name")
			.select2({
				ajax: {
					url: "{{ path('ingredient_search') }}",
					dataType: "json",
					delay: 250,
					processResults: function (data) {
						return {
							results: data.items,
						};
					},
					cache: true,
				},
				minimumInputLength: 1,
			})
			.on("select2:select", function (e) {
				const data = e.params.data;
				console.log("Selected ingredient:", data);
				document.getElementById("meal_ingredient_id").value = data.id;
				document.getElementById("meal_ingredient_name_hidden").value =
					data.text;

				// Add the selected ingredient to the options to keep it visible
				const newOption = new Option(data.text, data.id, true, true);
				$("#meal_ingredient_name").append(newOption).trigger("change");
			});
	});
</script>
{% endblock %}
